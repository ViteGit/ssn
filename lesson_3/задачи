3.1 Изучить

PHP. Встроенные функции: работа с переменными, математические, строковые, массивы, время. Предопределенные константы и переменные. Ошибки и исключения.

Работа с внешними ресурсами: с файлы, БД, XML.

Работа с POST/GET/COOKIE. Заголовки.

Безопасность. Исключения.

Предопределенные константы и суперглобальные переменные. Отладка, встроенные функции для отладки и работы с ресусами скрипта (обратить внимание на debug_*, var_dump(), var_export()).

Системы контроля версий Svn/Git, обратить внимание на различия. GIT в приоритете. Понятия master/branch/tag. Различные модели ветвений и работы с веткаим, пример статьи https://habrahabr.ru/post/106912/



3.2. Задание

Использовать для работы с GIT встроенный в IDE функционал или установить https://tortoisegit.org/

Зарегистрироваться и создать проект в https://github.com/. Ссылку на проект прислать по электронной почте.

Добавить в репозиторий все файлы сайтов написанные ранее по заданиям (апач, пхп и тд не надо, только файлы сайтов и .htaccess)

Освоить работу с гитом.

Сделать ветку step2, переключиться  на нее, дальнейшие задания выполнять в ней. После выполнения каждого пункта задания делать комит в ветку step2, в конце сделать мерж из ветки step2 в master, и сделать таг r.0.1



Написать функции:

- если строка содержит 2 подстроки, то замена второго вхождения на инвертированную подстроку, пример: исходная строка «abcdbce» подстрока «bc» результат «abcdcbe»

- реализовать сортировку двумерных массивов по заданному ключу в указанном направлении, пример: исходное [[a=>3],[a=>2,b=>8]….] для ключа «a» по возрастанию на выходе [[a=>2,b=>8], [a=>3]….]

- добавить обработку исключений для имеющегося функционала

- изучить переменные $_REQUEST, $_POST, $_GET, $_COOKIE, $_SERVER, обратить в каких приоритетах  образуется $_REQUEST

Установить и настроить xdebug. Освоить работу с ним в IDE.

- в БД создать базу test_rubric и таблицы для хранения данных, примерно такая структура (желательно сразу подумать над архитектурой и реализовать максимально гибкую, в процессе выполнения будет более понятно что требуется добавить или убрать):

-- товар: ид, код, название

-- свойства товаров: товар, значение свойства

-- рубрики: ид, код, название

-- связь товар и рубрика

-- связь товар, тип цены и цена

--  наполнить произвольными данными

-- модифицировать структуру таблицы так, чтобы была возможность хранить многоуровневый рубрикатор, уровень вложенности неограничен

- вывести из БД список товаров и их цены (максимальную и минимальную)

- добавить фильтр по названию товара (с возможностью передать ссылку на отфильтрованный товар)

- создать форму загрузки xml-файла в БД в соответствии с заданным типом (2.2.xml)

Реализовать функционал экспорта каталога в xml-файл в соответствии с входным форматом (2.2.xml).

Вывод рубрикатора товаров. Функционал фильтра по цене. В просмотре рубрики выводить все товары этого раздела и подразделов.

Выгрузить дамп получившейся БД в файл и добавить в репозиторий.

Дальнейшее изучение php.